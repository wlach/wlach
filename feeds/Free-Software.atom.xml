<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">William Lachance's Log: Posts tagged 'Free Software'</title>
 <link rel="self" href="https://wrla.ch/feeds/Free-Software.atom.xml" />
 <link href="https://wrla.ch/tags/Free-Software.html" />
 <id>urn:https-wrla-ch:-tags-Free-Software-html</id>
 <updated>2013-04-19T04:00:00Z</updated>
 <entry>
  <title type="text">The need for a modern open source email client and Geary's fundraiser</title>
  <link rel="alternate" href="https://wrla.ch/blog/2013/04/the-need-for-a-modern-open-source-email-client-and-geary-s-fundraiser/?utm_source=Free-Software&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2013-04-the-need-for-a-modern-open-source-email-client-and-geary-s-fundraiser</id>
  <published>2013-04-19T04:00:00Z</published>
  <updated>2013-04-19T04:00:00Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;div class="figure"&gt;&lt;img src="http://www.yorba.org/images/igg/geary-2.png" alt="" /&gt;
 &lt;p class="caption"&gt;&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;One of my frustrations with the Linux desktop is the lack of an email client that&amp;rsquo;s in the same league as GMail or Apple&amp;rsquo;s mail.app. &lt;a href="https://www.mozilla.org/EN/thunderbird"&gt;Thunderbird&lt;/a&gt; is ok as far as it goes (I use it for my day-to-day Mozilla correspondence) but I miss having a decent conversation view of email (yes, I tried the &lt;a href="https://addons.mozilla.org/en-us/thunderbird/addon/gmail-conversation-view/"&gt;conversation view extension&lt;/a&gt; &amp;#8212; while impressive in some ways, it ultimately didn&amp;rsquo;t work particularly well for me) and the search functionality is rather slow and cumbersome. I&amp;rsquo;d like to be optimistic about these problems being fixed at some point but after nearly 2 years of using the product without much visible improvement my expectation of that happening is rather low.&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://yorba.org"&gt;Yorba&lt;/a&gt; non-profit recently started a &lt;a href="http://www.indiegogo.com/projects/geary-a-beautiful-modern-open-source-email-client"&gt;fundraiser&lt;/a&gt; to work on the next edition of Geary, an email client which I hope will fill the niche that I&amp;rsquo;m talking about. It&amp;rsquo;s pretty rough around the edges still, but even at this early stage the conversation view is beautiful and more or less exactly what I want. The example of Shotwell (their photo management application) suggests that they know a thing or two about creating robust and useable software, not a common thing in this day and age. In any case, their pitch was compelling enough for me to donate a few dollars to the cause. If you care about having a great email experience that is completely under your control (and not that of an advertising or product company with their own agenda), then maybe you could too?&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Measuring what the user sees</title>
  <link rel="alternate" href="https://wrla.ch/blog/2011/11/measuring-what-the-user-sees/?utm_source=Free-Software&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2011-11-measuring-what-the-user-sees</id>
  <published>2011-11-11T05:00:00Z</published>
  <updated>2011-11-11T05:00:00Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;p&gt;I&amp;rsquo;ve been spending the last month or so at Mozilla prototyping a new project called &lt;a href="https://wiki.mozilla.org/Project_Eideticker"&gt;Eideticker&lt;/a&gt; which aims to use video capture data and image/frame analysis for performance measurement of &lt;a href="https://wiki.mozilla.org/Mobile/Fennec/Android"&gt;Firefox Mobile&lt;/a&gt;. It&amp;rsquo;s still in quite a rough state, but it&amp;rsquo;s now complete enough that I thought it would be worth spending a bit of time describing both its motivation and how it works.&lt;/p&gt;

&lt;p&gt;First, a bit of an introduction. Up to now, our automated performance tools have used entirely synthetic benchmarks (how long til we get the onload event? how many ms since we last hit the main loop?) to gather performance information. As we&amp;rsquo;ve found out, there&amp;rsquo;s a lot you can measure with synthetic benchmarks. Tools like &lt;a href="https://wiki.mozilla.org/Buildbot/Talos"&gt;Talos&lt;/a&gt; have proven themselves by catching performance regressions on a very regular basis.&lt;/p&gt;

&lt;p&gt;Still, there&amp;rsquo;s many things that synthetic benchmarks can&amp;rsquo;t easily or reliably measure. For example, it&amp;rsquo;s nice to know that a page has triggered an &amp;ldquo;onload&amp;rdquo; event (and the sooner it does that, the better), but what does the browser look like before then? If it&amp;rsquo;s a complicated or image intensive page, it might take 10 or 15 seconds to load. In this interval, user studies have clearly shown that an application displaying &lt;em&gt;something&lt;/em&gt; sooner rather than later is always desirable if it&amp;rsquo;s not possible to display everything immediately (due to network traffic, CPU constraints, whatever). It&amp;rsquo;s this area of user-perceived performance that Eideticker aims to help with. Eideticker creates a system to capture live data of what the browser is displaying, then performs image/frame analysis on the result to see how we&amp;rsquo;re actually doing on these inherently subjective metrics. The above was just one example, others might include:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Measuring amount of time it takes to actually see the start page from time of launch.&lt;/li&gt;
 &lt;li&gt;Measuring amount of time you see the checkboard pattern after panning the browser.&lt;/li&gt;
 &lt;li&gt;Measuring the visual artifacts while loading a complicated page (how long does it take to display something? how long until we get something close to the final expected result? how long until we get the actual final result?)&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;It turns out that it&amp;rsquo;s possible to put together a system that does this type of analysis using off-the-shelf components. We&amp;rsquo;re still very much in the early phase, but initial signs are promising. The initial test system has the following pieces:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;A Linux workstation equipped with a Decklink extreme 3D video capture card&lt;/li&gt;
 &lt;li&gt;An Android phone with HDMI output (currently using the LG G2X)&lt;/li&gt;
 &lt;li&gt;A version of talos modified to video capture the results of a test.&lt;/li&gt;
 &lt;li&gt;A bit of python code to actually analyze the video capture data.&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;So far, I&amp;rsquo;ve got the system working end-to-end for two simple cases. The first is the &amp;ldquo;pageload&amp;rdquo; case. This lets you capture the results of loading any page within a talos pageset. Here&amp;rsquo;s a quick example of the movie we generate from a tsvg test:&lt;/p&gt;

&lt;video src="http://people.mozilla.com/~wlachance/eideticker-map.webm" width="50%" height="50%" controls="controls"&gt;&lt;/video&gt;

&lt;p&gt;Here&amp;rsquo;s another example, a color cycle test (actually the first test case I created, as a throwaway):&lt;/p&gt;

&lt;video src="http://people.mozilla.com/~wlachance/eideticker-colorcycle.webm" width="50%" height="50%" controls="controls"&gt;&lt;/video&gt;

&lt;p&gt;After the video is captured, the next step is to analyze it! As described above (and in further detail on the &lt;a href="https://wiki.mozilla.org/Project_Eideticker"&gt;Eideticker wiki page&lt;/a&gt;), there&amp;rsquo;s lots of things we could measure but the easiest thing is probably just to count the number of unique frames and derive a frame rate for the capture based on that (the higher the better, obviously). Based on an initial prototype from Chris Jones, I&amp;rsquo;ve started work on a &lt;a href="https://github.com/mozilla/eideticker/blob/master/src/videocapture/videocapture/capture.py"&gt;python library&lt;/a&gt; to do exactly this. Assuming you have an eideticker capture handy, you can run a tool called &amp;ldquo;analyze.py&amp;rdquo; on the command line, and it&amp;rsquo;ll give you its best guess of the # of unique frames:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;br /&amp;gt; (eideticker)wlach@eideticker:~/src/eideticker$ bin/analyze.py ./src/talos/talos/captures/capture-2011-11-11T11:23:51.627183.zip&amp;lt;br /&amp;gt; Unique frames: 121/272&amp;lt;br /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(There are currently some rough edges with this: we&amp;rsquo;re doing frame comparisons based on per-pixel changes, but the video capture data is slightly noisy so sometimes a pixel changes its value even when nothing has actually happened in the browser)&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s what I&amp;rsquo;ve got working so far. What&amp;rsquo;s next? Short term, we have some &lt;a href="https://wiki.mozilla.org/Auto-tools/Goals/2011Q4#Eideticker"&gt;specific high-level goals&lt;/a&gt; about where we want to be with the system by the end of the quarter. The big unfinished pieces are getting an end-to-end test involving real user interaction (typing into the URL bar, etc.) going and turning this prototype system into something that&amp;rsquo;s easy for others to duplicate and is robust enough to be easily extended. Hopefully this will come together fairly quickly now that the basics are in place.&lt;/p&gt;

&lt;p&gt;The longer term picture really depends on feedback from the community. Unlike many of the projects we work on in &lt;a href="https://wiki.mozilla.org/Auto-tools"&gt;automation &amp;#38; tools&lt;/a&gt;, Eideticker is &lt;strong&gt;not&lt;/strong&gt; meant to be something that&amp;rsquo;s run on every checkin. Rather, it&amp;rsquo;s intended to be a useful tool that can be run on an as needed basis by developers and QA. We obviously have our own ideas on how something like this might be useful (and what a reasonable user interface might be), but I&amp;rsquo;ve found in cases like this it&amp;rsquo;s much better to go to the people who will actually be using this thing. So with that in mind, here&amp;rsquo;s a call for feedback. I have two very specific questions:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Is there a specific problem you&amp;rsquo;ve been working on that a framework like this might be helpful for?&lt;/li&gt;
 &lt;li&gt;What do you think of the current workflow model described in the &lt;a href="http://github.com/mozilla/eideticker/README.md"&gt;README&lt;/a&gt;?&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;My goal is to make something that people will love, so please do let me know what you think. Nothing about this project is cast in stone and the last thing I want is to deliver a product that people don&amp;rsquo;t actually want to use.&lt;/p&gt;

&lt;p&gt;Equally, while Eideticker is being written primarily with the goal of making Mobile Firefox better (and in the slightly-less short term, desktop Firefox and &lt;a href="https://github.com/andreasgal/B2G"&gt;Boot to Gecko&lt;/a&gt;), much of it is broadly applicable to any user-facing mobile or desktop application. If you think some component of Eideticker might be interesting to your project and want to collaborate, feel free to get in touch.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Updates on my ridiculous pet projects</title>
  <link rel="alternate" href="https://wrla.ch/blog/2011/09/updates-on-my-ridiculous-pet-projects/?utm_source=Free-Software&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2011-09-updates-on-my-ridiculous-pet-projects</id>
  <published>2011-09-29T04:00:00Z</published>
  <updated>2011-09-29T04:00:00Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;ol&gt;
 &lt;li&gt;
  &lt;p&gt;As you may or may not have noticed, &lt;a href="http://hbus.ca"&gt;hbus.ca&lt;/a&gt; has been down for the past few weeks. Halifax updated the data but I didn&amp;rsquo;t have a chance to update it. Well, I finally did, and hbus is now up in its former glory (minus a small issue with stops named &amp;#8216;6016_merged_3300509&amp;prime;: thanks Metro Transit, time to update &lt;a href="https://github.com/wlach/routez/blob/master/src/gtfs-hacks/update-halifax-gtfs.py"&gt;that script&lt;/a&gt; to massage your data again!) . I still wonder a bit about why I keep putting time into a site oriented around a city I haven&amp;rsquo;t lived in for over 2 years now (especially when Google Maps arguably does a better job at most things than I do), but there you go!&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;&lt;a href="http://nixi.ca"&gt;NIXI&lt;/a&gt; is still up and being useful to me, though I&amp;rsquo;m a little bit disappointed by its uptake from the rest of the world (the site gets like 5&amp;ndash;12 unique views a day). What do I need to do for you guys? A mobile version? French localization? I just added support for Washington (Capital Bikeshare) and Boston (Hubway), maybe it&amp;rsquo;ll get some uptake there.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Not really my project, but Stephane Guidoin put up an awesome site called &lt;a href="http://zonecone.ca"&gt;zonecone.ca&lt;/a&gt; which helps you find out about traffic obstacles that might delay your journey. It even has a nifty feature where you can create an account, specify a route you take regularly (say, your commute), and it&amp;rsquo;ll automatically notify you if something pops up. As you may have guessed, I&amp;rsquo;m not the biggest fan of automobiles, but this is still very cool. 😉 This site was originally based on &lt;a href="http://wrla.ch/blog/2011/06/template-for-a-map-based-web-app/"&gt;the map layout template&lt;/a&gt; that I announced a few months ago.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;I have a lettuce plant growing on my new balcony. It&amp;rsquo;s doing ok, though it will probably have to be brought in soon due to frost. Will it get enough sun? Can I prevent my cat from eating it? Will it make a delicious salad? Stay tuned!&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</content></entry>
 <entry>
  <title type="text">Routez opensourced</title>
  <link rel="alternate" href="https://wrla.ch/blog/2011/04/routez-opensourced/?utm_source=Free-Software&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2011-04-routez-opensourced</id>
  <published>2011-04-19T04:00:00Z</published>
  <updated>2011-04-19T04:00:00Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;p&gt;Just a quick note to say that I just opensourced the software behind &lt;a href="http://hbus.ca"&gt;hbus.ca&lt;/a&gt;, nicknamed &amp;ldquo;Routez&amp;rdquo; under the &lt;a href="http://www.affero.org/oagpl.html"&gt;Affero GPL&lt;/a&gt;. You can get the code on &lt;a href="http://github.com/wlach/routez"&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://wrla.ch/blog/2011/04/routez-opensourced/hbus_shot_apr_2011/" rel="attachment wp-att-238"&gt;&lt;img src="/files/2011/04/hbus_shot_apr_2011.png" alt="" title="hbus_shot_apr_2011" width="300" height="225" class="aligncenter size-full wp-image-238" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For those new to the project, hbus.ca is a generic trip planning / transit information site for Halifax, Nova Scotia written using the &lt;a href="http://www.django-project.com"&gt;Django&lt;/a&gt; web framework. It currently has two main features:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;A trip planning front-end much like Google Transit (built from the ground up using the &lt;a href="http://github.com/wlach/libroutez"&gt;libroutez&lt;/a&gt; library).&lt;/li&gt;
 &lt;li&gt;A &amp;ldquo;nearby&amp;rdquo; routes feature which gives you all the bus departures near a particular location.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;On the backend, both of these features are accessible via JSON APIs, for use in transit apps, etc. &lt;a href="http://transittogo.mindsea.ca"&gt;Transit to Go&lt;/a&gt; uses these to great effect.&lt;/p&gt;

&lt;p&gt;There is nothing particularly Halifax-specific to the underlying Routez software, aside from various references in the web front end to Halifax and hbus.ca. In fact, we use Routez to provide information for Transit to Go Edmonton right now, with no modification.&lt;/p&gt;

&lt;p&gt;Originally my plan was to release something that was completely generic out of the box so that anyone could trivially make up a version of this site for their favourite city. I&amp;rsquo;ve made some headway towards that goal over the last week or so, but there&amp;rsquo;s still some ways to go. There&amp;rsquo;s basically two major issues:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;The geocoder depends on information gleaned from the geobase road network dataset. The intent behind this is noble (provide an end-to-end solution that doesn&amp;rsquo;t depend on third parties) but in practice this limits the software&amp;rsquo;s usefulness. It would be better to optionally allow a Routez-based site to use Google&amp;rsquo;s geocoder on the front-end. Unfortunately, to comply with Google&amp;rsquo;s terms of service, we&amp;rsquo;d also need to use their Maps API for the base map as well. Perhaps the best option here would be to use something like &lt;a href="http://mapstraction.com"&gt;Mapstraction&lt;/a&gt; to allow users to select their preferred mapping provider.&lt;/li&gt;
 &lt;li&gt;The trip planning software used in the backend, libroutez, is getting a bit long in the tooth and is quite finicky about what kind of data it will accept. I think the long-term solution to this is to switch to &lt;a href="http://graphserver.github.com/graphserver/"&gt;Graphserver&lt;/a&gt; (which is more mature and better supported), but some features would have to be added to it to support the kind of things that Routez needs (like a list of upcoming departures at a particular transit stop).&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;Even with these problems, I figured it would be better to open up what I have for people to check out and play with. Have a look and let me know what you think!&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">D&amp;eacute;chets Montr&amp;eacute;al goes mobile</title>
  <link rel="alternate" href="https://wrla.ch/blog/2011/02/d-eacute-chets-montr-eacute-al-goes-mobile/?utm_source=Free-Software&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2011-02-d-eacute-chets-montr-eacute-al-goes-mobile</id>
  <published>2011-02-19T05:00:00Z</published>
  <updated>2011-02-19T05:00:00Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;p&gt;A few weekends ago, there was a &lt;a href="http://montrealouvert.net/"&gt;Montr&amp;eacute;al Ouvert&lt;/a&gt; hackfest at the &lt;a href="http://notmanhouse.com"&gt;Notman House&lt;/a&gt;. I decided to take a bit of a break from my usual transit hacking and built up a mobile friendly interface to the wonderful &lt;a href="http://dechetsmontreal.ca/"&gt;D&amp;eacute;chets Montr&amp;eacute;al&lt;/a&gt;, which lets residents easily get information on their garbage collection schedule.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://wrla.ch/blog/?attachment_id=210" rel="attachment wp-att-210"&gt;&lt;img src="/files/2011/02/dechets-screenies.jpg" alt="" title="Dechets Montreal Screenshots" width="400" height="243" class="alignnone size-full wp-image-210" srcset="/files/2011/02/dechets-screenies-300x182.jpg 300w, /files/2011/02/dechets-screenies.jpg 400w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The interface is intentionally quite simplistic, the idea being that if you&amp;rsquo;re accessing the site using a mobile device you&amp;rsquo;re probably only interested in the collection schedule for the current week and nothing else. If you want something more complicated you probably should just be using the full site.&lt;/p&gt;

&lt;p&gt;Anyway, another fun opportunity to play with mobile web technology (a bit of break from my current &lt;a href="http://mindsea.com"&gt;consulting gig&lt;/a&gt;, which is mostly native iPhone apps). A few things that I learned this time around:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;It&amp;rsquo;s easy to give your application a nice icon when added to the iPhone home screen by using a &lt;a href="http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3"&gt;webpage icon&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Related to the above, you can give the user a nice hint to add your webpage to their homescreen by using Google&amp;rsquo;s &lt;a href="http://code.google.com/p/mobile-bookmark-bubble/"&gt;mobile bookmark bubble&lt;/a&gt; library.&lt;/li&gt;
 &lt;li&gt;The iPhone&amp;rsquo;s form interface will persist after pressing &amp;ldquo;Search&amp;rdquo; unless &lt;a href="http://www.em-motion.mobi/2010/05/01/iphone-ajax-form-submission/"&gt;you change the focus using an anchor element&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://jquery.com"&gt;jQuery&lt;/a&gt; is the best thing since sliced bread for dynamic web applications (ok, I actually knew this already but I just can&amp;rsquo;t get over how great it is).&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;Thanks muchly to Kent Mewhort, the brains behind D&amp;eacute;chets Montr&amp;eacute;al, for helping me incorporate my work into his Drupal-based site.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">Back to WordPerfect: libwpd 0.9.0</title>
  <link rel="alternate" href="https://wrla.ch/blog/2010/11/back-to-wordperfect-libwpd-0-9-0/?utm_source=Free-Software&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2010-11-back-to-wordperfect-libwpd-0-9-0</id>
  <published>2010-11-17T05:00:00Z</published>
  <updated>2010-11-17T05:00:00Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;p&gt;Those who&amp;rsquo;ve known me for a while have probably heard about my first major open source project, &lt;a href="http://libwpd.sourceforge.net"&gt;libwpd&lt;/a&gt;. In a nutshell, it&amp;rsquo;s a parser for WordPerfect documents with the primary aim of converting them into something usable by the major opensource office programs out there. It&amp;rsquo;s used by &lt;a href="http://libreoffice.org"&gt;LibreOffice&lt;/a&gt;, &lt;a href="http://openoffice.org"&gt;OpenOffice.org&lt;/a&gt;, &lt;a href="http://abisource.com"&gt;AbiWord&lt;/a&gt;, and &lt;a href="http://koffice.org"&gt;KOffice&lt;/a&gt;. WordPerfect isn&amp;rsquo;t the most popular word processor out there, but there&amp;rsquo;s still quite a number of legacy documents in that format, especially in the legal community (which was almost exclusively using WordPerfect until very recently).&lt;/p&gt;

&lt;p&gt;This project goes way back: I started work on it with Marc Maurer way back in 2002 (just after I graduated from University). I put a rather ridiculous amount of unpaid work into it for a few years. WordPerfect&amp;rsquo;s streaming document format is a bit esoteric to say the least, and figuring out how to map into the document model used by more modern software was a pretty interesting problem. I still remember spending sleepless nights trying to reliably convert WordPerfect&amp;rsquo;s outlining into structured lists (I mostly succeeded).&lt;/p&gt;

&lt;p&gt;Since then, I&amp;rsquo;ve mostly moved on to other things, leaving the project in the capable hands of &lt;a href="http://fridrich.blogspot.com"&gt;Fridrich Strba&lt;/a&gt;, who&amp;rsquo;s been steadily working on adding a number of important features to the library that massively improve import fidelity. I did have time this summer to add page numbering support (thanks to &lt;a href="http://www.yamsoftware.com"&gt;Yam Software&lt;/a&gt; for sponsoring that work) and move the project over to git from cvs, but for the most part it&amp;rsquo;s been his show since late 2004.&lt;/p&gt;

&lt;p&gt;Even if I&amp;rsquo;m not as actively involved as I once was, when there&amp;rsquo;s major developments, I still get excited (perhaps in the way that a parent might about a child who&amp;rsquo;s left the household). And yesterday brought something pretty big: &lt;a href="http://libwpd.sourceforge.net/news.html"&gt;libwpd 0.9.0&lt;/a&gt;. With this release, we finally supports graphics (thanks to the work of Fridrich and Ariya Hidayat on &lt;a href="http://libwpg.sourceforge.net"&gt;libwpg&lt;/a&gt;), notes, the page numbering that I mentioned above, and support for encrypted documents. It&amp;rsquo;s a big deal. Here&amp;rsquo;s some before and after screenshots:&lt;/p&gt;

&lt;table&gt;
 &lt;tr&gt;
  &lt;td&gt;&lt;a href="/files/2010/11/libwpd_screenshot_graphic_0.8.png"&gt;
    &lt;br /&gt; &lt;img src="/files/2010/11/libwpd_screenshot_graphic_0.8_thumb.png" alt="libwpd_screenshot_graphic_0.8_thumb" title="libwpd_screenshot_graphic_0.8_thumb" width="200" height="163" class="alignleft size-full wp-image-148" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;td&gt;&lt;a href="/files/2010/11/libwpd_screenshot_graphic_0.9.png"&gt;
    &lt;br /&gt; &lt;img src="/files/2010/11/libwpd_screenshot_graphic_0.9_thumb.png" alt="libwpd_screenshot_graphic_0.9_thumb" title="libwpd_screenshot_graphic_0.9_thumb" width="200" height="152" class="alignleft size-full wp-image-151" /&gt;
    &lt;br /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;&lt;a href="/files/2010/11/libwpd_screenshot_note_0.8.png"&gt;
    &lt;br /&gt; &lt;img src="/files/2010/11/libwpd_screenshot_note_0.8_thumb.png" alt="libwpd_screenshot_note_0.8_thumb" title="libwpd_screenshot_note_0.8_thumb" width="200" height="163" class="alignleft size-full wp-image-148" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;td&gt;&lt;a href="/files/2010/11/libwpd_screenshot_note_0.9.png"&gt;
    &lt;br /&gt; &lt;img src="/files/2010/11/libwpd_screenshot_note_0.9_thumb.png" alt="libwpd_screenshot_note_0.9_thumb" title="libwpd_screenshot_note_0.9_thumb" width="200" height="152" class="alignleft size-full wp-image-151" /&gt;
    &lt;br /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;&lt;a href="/files/2010/11/libwpd_screenshot_page_numbering_0.8.png"&gt;
    &lt;br /&gt; &lt;img src="/files/2010/11/libwpd_screenshot_page_numbering_0.8_thumb.png" alt="libwpd_screenshot_page_numbering_0.8_thumb" title="libwpd_screenshot_page_numbering_0.8_thumb" width="200" height="163" class="alignleft size-full wp-image-148" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;td&gt;&lt;a href="/files/2010/11/libwpd_screenshot_page_numbering_0.9.png"&gt;
    &lt;br /&gt; &lt;img src="/files/2010/11/libwpd_screenshot_page_numbering_0.9_thumb.png" alt="libwpd_screenshot_note_0.9_thumb" title="libwpd_screenshot_page_numbering_0.9_thumb" width="200" height="152" class="alignleft size-full wp-image-151" /&gt;
    &lt;br /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;All this goodness should be available transparently whenever you import a WordPerfect file in an upcoming release of &lt;a href="http://libreoffice.org"&gt;LibreOffice&lt;/a&gt;. AbiWord and KOffice filters should come soon enough as well (the updates needed to support libwpd 0.9 are fairly minimal).&lt;/p&gt;

&lt;p&gt;Integration with OpenOffice.org is another story. Without going into great amount of detail on the situation (see &lt;a href="http://arstechnica.com/open-source/news/2010/09/document-foundation-forks-openofficeorg-to-liberate-it-from-oracle.ars"&gt;this article&lt;/a&gt; on Ars Technica for the gory details if you&amp;rsquo;re really interested), it&amp;rsquo;s quite unlikely that OpenOffice.org WordPerfect support will advance unless (1) someone volunteers to do it and (2) Oracle drops their copyright assignment policy. The chances of these things happening seem rather low to me. My personal recommendation would be to switch to &lt;a href="http://libreoffice.org"&gt;LibreOffice&lt;/a&gt; as soon as the first production version is released. I expect it to rapidly overtake OpenOffice.org in functionality due to its more open participation model.&lt;/p&gt;</content></entry></feed>