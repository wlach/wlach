<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">William Lachance's Log: Posts tagged 'Voltus'</title>
 <link rel="self" href="https://wrla.ch/feeds/Voltus.atom.xml" />
 <link href="https://wrla.ch/tags/Voltus.html" />
 <id>urn:https-wrla-ch:-tags-Voltus-html</id>
 <updated>2022-09-25T19:55:40Z</updated>
 <entry>
  <title type="text">Using Sphinx in a Monorepo</title>
  <link rel="alternate" href="https://wrla.ch/blog/2022/09/using-sphinx-in-a-monorepo/?utm_source=Voltus&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2022-09-using-sphinx-in-a-monorepo</id>
  <published>2022-09-25T19:55:40Z</published>
  <updated>2022-09-25T19:55:40Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;p&gt;Just wanted to type up a couple of notes about working with &lt;a href="https://www.sphinx-doc.org/en/master/"&gt;Sphinx&lt;/a&gt; (the python documentation generator) inside a monorepo, an issue I&amp;rsquo;ve been struggling with (off and on) at &lt;a href="https://voltus.co"&gt;Voltus&lt;/a&gt; since I started. I haven&amp;rsquo;t seen much written about this topic despite (I suspect) it being a reasonably frequent problem.&lt;/p&gt;

&lt;p&gt;In general, there&amp;rsquo;s a lot to like about Sphinx: it&amp;rsquo;s great at handling deeply nested trees of detailed documentation with cross-references inside a version control system. It has local search that works pretty well and some themes (like &lt;a href="https://sphinx-rtd-theme.readthedocs.io/en/stable/"&gt;readthedocs&lt;/a&gt;) scale pretty nicely to hundreds of documents. The directives and roles system is pretty flexible and covers most of the common things one might want to express in technical documentation. And if the built-in set of functionality isn&amp;rsquo;t enough, there&amp;rsquo;s a wealth of third party extension modules. My only major complaint is that it uses the somewhat obscure &lt;a href="https://docutils.sourceforge.io/rst.html"&gt;restructuredText&lt;/a&gt; file format by default, but you can get around that by using the excellent &lt;a href="https://myst-parser.readthedocs.io/en/latest/"&gt;MyST extension&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately, it has a pretty deeply baked in assumption that all documentation for your project lives inside a &lt;em&gt;single&lt;/em&gt; subfolder. This is fine for a small repository representing a single python module, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;root&amp;gt;
README.md
setup.cfg
pyproject.toml
mymodule/
docs/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, this doesn&amp;rsquo;t work for a large monorepo, where you would typically see something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;root&amp;gt;/module-1/submodule-a
&amp;lt;root&amp;gt;/module-1/submodule-b
&amp;lt;root&amp;gt;/module-2/submodule-c
...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a monorepo, you usually want to include a module&amp;rsquo;s documentation inside its own directory. This allows you to use your &lt;a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners"&gt;code ownership constraints&lt;/a&gt; for documentation, among other things.&lt;/p&gt;

&lt;p&gt;The naive solution would be to create a sphinx site for every single one of these submodules. This is what happened at Voltus and I don&amp;rsquo;t recommend it. For a large monorepo you&amp;rsquo;ll end up with dozens, maybe hundreds of documentation &amp;ldquo;sites&amp;rdquo;. Under this scenario, discoverability becomes a huge problem: no longer can you rely on tables of contents and the built-in search to discover content: you just have to &amp;ldquo;know&amp;rdquo; where things live. I&amp;rsquo;m more than nine months in here and I&amp;rsquo;m &lt;em&gt;still&lt;/em&gt; discovering new documentation.&lt;/p&gt;

&lt;p&gt;It would be much better if we could somehow collect documentation from other parts of the repository into a single site. Is this possible? tl;dr: Yes. There&amp;rsquo;s a few solutions, each with their pros and cons.&lt;/p&gt;

&lt;h2 id="the-obvious-solution-that-doesnt-work"&gt;The obvious solution that doesn&amp;rsquo;t work&lt;/h2&gt;

&lt;p&gt;The most obvious solution here is to create a symbolic link inside your documentation directory, say the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;root&amp;gt;/docs/
&amp;lt;root&amp;gt;/docs/module-1/submodule-a -&amp;gt; &amp;lt;root&amp;gt;/module-1/submodule-a/docs&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfortunately, &lt;a href="https://stackoverflow.com/questions/10199233/can-sphinx-link-to-documents-that-are-not-located-in-directories-below-the-root"&gt;this doesn&amp;rsquo;t work&lt;/a&gt;. ☹️ Sphinx doesn&amp;rsquo;t follow symbolic links.&lt;/p&gt;

&lt;h2 id="solution-1-just-copy-the-files-in"&gt;Solution 1: Just copy the files in&lt;/h2&gt;

&lt;p&gt;The most obvious solution is to just copy the files from various parts of the monorepo into place, as part of the build system. Mozilla did this for Firefox, with the &lt;a href="https://searchfox.org/mozilla-central/source/tools/moztreedocs/__init__.py"&gt;moztreedocs&lt;/a&gt; system.&lt;/p&gt;

&lt;p&gt;The &lt;a href="firefox-source-docs.mozilla.org/"&gt;results look pretty good&lt;/a&gt;, but this is a bespoke solution. Aside from general ideas, there&amp;rsquo;s no way I&amp;rsquo;m going to be able to apply anything in moztreedocs to Voltus&amp;rsquo;s monorepo (which is based on a completely different build system). And being honest, I&amp;rsquo;m not sure if the 40+ hour (estimated) effort to reimplement it would be a good use of time compared to other things I could be doing.&lt;/p&gt;

&lt;h2 id="solution-2-use-the-include-directive-with-myst"&gt;Solution 2: Use the include directive with MyST&lt;/h2&gt;

&lt;p&gt;Later versions of MyST include support for &lt;a href="https://myst-parser.readthedocs.io/en/latest/faq/index.html#include-a-file-from-outside-the-docs-folder-like-readme-md"&gt;directly importing a markdown file from another part of the repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a limited form of embedding: it won&amp;rsquo;t let you import an entire directory of markdown files. But if your submodules mostly just include content in the form of a &lt;code&gt;README.md&lt;/code&gt; (or similar), it might just be enough. Just create a directory for these files to live (say &lt;code&gt;services&lt;/code&gt;) and slot them in:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;root&amp;gt;/docs/services/module-1/submodule-a/index.md&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```{include} ../../../module-1/submodule-a/README.md
```&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m currently in the process of implementing this solution inside Voltus. I have optimism that this will be a big (if incremental) step up over what we have right now.&lt;/p&gt;

&lt;h2 id="solution-3-sphinx-collections"&gt;Solution 3: Sphinx Collections&lt;/h2&gt;

&lt;p&gt;This one I just found about today: &lt;a href="https://sphinx-collections.readthedocs.io"&gt;Sphinx Collections&lt;/a&gt; is a small python module that lets you automatically import entire &lt;em&gt;directories&lt;/em&gt; of files into your sphinx tree, under a &lt;code&gt;_collections&lt;/code&gt; module. You configure it in your top-level &lt;code&gt;conf.py&lt;/code&gt; like this:&lt;/p&gt;

&lt;div class="brush: py"&gt;
 &lt;div class="colorful"&gt;
  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="s2"&gt;"sphinxcontrib.collections"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;collections&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"submodule-a"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"driver"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"symlink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/monorepo/module-1/submodule-a/docs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"target"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"submodule-a"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;After setting this up, &lt;code&gt;submodule-a&lt;/code&gt; is now available under &lt;code&gt;_collections&lt;/code&gt; and you can include it in your table of contents like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...

```{toctree}
:caption: submodule-a

_collections/submodule-a/index.md
```

...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point, &lt;code&gt;submodule-a&lt;/code&gt;&amp;rsquo;s documentation should be available under &lt;code&gt;http://&amp;lt;my doc domain&amp;gt;/_collections/submodule-a/index.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pretty nifty. The main downside I&amp;rsquo;ve found so far is that this doesn&amp;rsquo;t play nicely with the &lt;a href="https://docs.readthedocs.io/en/stable/guides/edit-source-links-sphinx.html"&gt;Edit on GitHub&lt;/a&gt; links that the readthedocs theme automatically inserts (it thinks the files exist under &lt;code&gt;_collections&lt;/code&gt;), but there&amp;rsquo;s probably a way to work around that.&lt;/p&gt;

&lt;p&gt;I plan on investigating this approach further in the coming months.&lt;/p&gt;</content></entry>
 <entry>
  <title type="text">90 days out and in</title>
  <link rel="alternate" href="https://wrla.ch/blog/2022/04/90-days-out-and-in/?utm_source=Voltus&amp;utm_medium=Atom" />
  <id>urn:https-wrla-ch:-blog-2022-04-90-days-out-and-in</id>
  <published>2022-04-16T16:44:14Z</published>
  <updated>2022-04-16T16:44:14Z</updated>
  <author>
   <name>William Lachance</name></author>
  <content type="html">
&lt;p&gt;The 90 day mark just passed at my &lt;a href="https://voltus.co"&gt;new gig at Voltus&lt;/a&gt;, feels like a good time for a bit of self-reflection.&lt;/p&gt;

&lt;p&gt;In general, I think it&amp;rsquo;s been a good change and that it was the right time to leave Mozilla. Since I left, a few people have asked me why I chose to do so: while the full answer is pretty complicated (these things are never simple!), I think it does ultimately come down to wanting to try something new after 10+ years. I&amp;rsquo;ve accumulated a fair amount of expertise in web development and data engineering and I wanted to see if I could apply them to a new area that I cared about&amp;mdash; in this case, climate change and the energy transition.&lt;/p&gt;

&lt;p&gt;Voltus is a much younger and different company than Mozilla was, and there&amp;rsquo;s no shortage of things to learn and do. Energy markets are a rather interesting technical domain to work in&amp;mdash; a big intersection between politics, technology, and business. Lots of very old and very new things all at once. As a still-relatively young company, there is definitely more of a feeling that it&amp;rsquo;s possible to shape Voltus&amp;rsquo;s culture and practices, which has been interesting. There&amp;rsquo;s a bit of a balancing act between sharing what you&amp;rsquo;ve learned in previous roles while having the humility to recognize that there&amp;rsquo;s much you still don&amp;rsquo;t understand in a new workplace.&lt;/p&gt;

&lt;p&gt;On the downside, I have to admit that I do miss being able to work in the open. &lt;a href="https://www.canarymedia.com/articles/climatetech-finance/voltus-launches-1-3b-spac-to-help-businesses-reshape-their-power-use-and-ease-grid-stress"&gt;Voltus is currently in the process of going public&lt;/a&gt;, which has made me extra shy about saying much of anything about what I&amp;rsquo;ve been working on in a public forum.&lt;/p&gt;

&lt;p&gt;To some extent I&amp;rsquo;ve been scratching this itch by continuing to work on &lt;a href="https://irydium.dev"&gt;Irydium&lt;/a&gt; when I have the chance. I&amp;rsquo;ve done up a few new releases in the last couple of months, which I think have been fairly well received inside my very small community of people doing like-minded things. I&amp;rsquo;m planning on attending (at least part of) a &lt;a href="https://github.com/pyodide/pyodide/wiki/PyCon2022-sprint"&gt;pyodide sprint&lt;/a&gt; in early May, which I think should be a lot of fun as well as an opportunity to push browser-based data science forward.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also kept more of a connection with Mozilla than I thought I would have: some video meetings with former colleagues, answering questions on Element (&lt;a href="https://wiki.mozilla.org/Matrix"&gt;chat.mozilla.org&lt;/a&gt;), even &lt;a href="https://github.com/mozilla/glean-dictionary/pulls?q=is%3Apr+author%3Awlach+is%3Aclosed"&gt;some pull requests&lt;/a&gt; where I felt like I could make a quick contribution. I&amp;rsquo;m still using Firefox, which has actually given me more perspective on some problems that people at Mozilla might not experience (e.g. &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1536777"&gt;this screensharing bug&lt;/a&gt; which you&amp;rsquo;d only see if you&amp;rsquo;re using a WebRTC-based video conferencing solution like Google Meet).&lt;/p&gt;

&lt;p&gt;That said, I&amp;rsquo;m not sure to what extent this will continue: even if the source code to Firefox and the tooling that supports it is technically &amp;ldquo;open source&amp;rdquo;, outsiders like myself really have very limited visibility into what Mozilla is doing these days. This makes it difficult to really connect with much of what&amp;rsquo;s going on or know how I might be able to contribute. While it might be theoretically possible to join Mozilla&amp;rsquo;s Slack (at least last I checked), that feels like a rabbit hole I&amp;rsquo;d prefer not to go down. While I&amp;rsquo;m still interested in supporting Mozilla&amp;rsquo;s mission, I really don&amp;rsquo;t want more than one workplace chat tool in my life: there&amp;rsquo;s a lot of content there that is no longer relevant to me as a non-employee and (being honest) I&amp;rsquo;d rather leave behind. There&amp;rsquo;s lots more I could say about this, but probably best to leave it there: I understand that there&amp;rsquo;s reasons why things are the way they are, even if they make me a little sad.&lt;/p&gt;</content></entry></feed>